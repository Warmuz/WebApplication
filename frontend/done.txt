// src/App.jsx
import React, { useState } from "react";

function App() {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [user, setUser] = useState(null);
  const [usersList, setUsersList] = useState([]);
  const [loadingUsers, setLoadingUsers] = useState(false);
  const [error, setError] = useState("");

  const handleLogin = async (e) => {
    e.preventDefault();
    setError("");
    try {
      const formData = new FormData();
      formData.append("username", username);
      formData.append("password", password);

      const res = await fetch("http://localhost:8000/login", {
        method: "POST",
        body: formData,
      });

      if (!res.ok) throw new Error("Invalid login");

      const data = await res.json();
      setUser(data);

      if (data.role === "admin") {
        fetchUsers();
      }
    } catch (err) {
      setError(err.message);
    }
  };

  const fetchUsers = async () => {
    setLoadingUsers(true);
    const usersRes = await fetch("http://localhost:8000/view_users_with_files");
    const usersData = await usersRes.json();
    setUsersList(usersData.users);
    setLoadingUsers(false);
  };

  const handleFileUpload = async (userId, file) => {
    const formData = new FormData();
    formData.append("uploaded_file", file);

    await fetch(`http://localhost:8000/users/${userId}/upload_file`, {
      method: "POST",
      body: formData,
    });

    fetchUsers(); // refresh after upload
  };

  const handleFileDelete = async (userId) => {
    await fetch(`http://localhost:8000/users/${userId}/delete_file`, {
      method: "DELETE",
    });

    fetchUsers(); // refresh after delete
  };

  if (!user) {
    return (
      <div style={{ margin: "2rem" }}>
        <h1>Login</h1>
        <form onSubmit={handleLogin}>
          <div>
            <input
              type="text"
              placeholder="Username"
              value={username}
              onChange={(e) => setUsername(e.target.value)}
              required
            />
          </div>
          <div style={{ marginTop: "0.5rem" }}>
            <input
              type="password"
              placeholder="Password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
            />
          </div>
          <button style={{ marginTop: "1rem" }} type="submit">
            Login
          </button>
        </form>
        {error && <p style={{ color: "red" }}>{error}</p>}
      </div>
    );
  }

  return (
    <div style={{ margin: "2rem" }}>
      <h1>Welcome, {user.username}!</h1>
      {user.role !== "admin" ? (
        <p>You are not an admin. You cannot see the user list.</p>
      ) : loadingUsers ? (
        <p>Loading user list...</p>
      ) : (
        <table border="1" cellPadding="8" style={{ borderCollapse: "collapse" }}>
          <thead>
            <tr style={{ backgroundColor: "#f2f2f2" }}>
              <th>Username</th>
              <th>Role</th>
              <th>File</th>
            </tr>
          </thead>
          <tbody>
            {usersList.map((u) => (
              <tr key={u.id} style={{ borderBottom: "1px solid #ddd" }}>
                <td>{u.username}</td>
                <td>{u.role}</td>
                <td>
                  {u.file ? (
                    <>
                      <a
                        href={`http://localhost:8000/${u.file.path}`}
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        {u.file.filename}
                      </a>
                      <button
                        style={{ marginLeft: "0.5rem" }}
                        onClick={() => handleFileDelete(u.id)}
                      >
                        Delete
                      </button>
                    </>
                  ) : (
                    <span style={{ color: "#888", fontStyle: "italic" }}>
                      No file assigned
                    </span>
                  )}
                  <div style={{ marginTop: "0.5rem" }}>
                    <input
                      type="file"
                      onChange={(e) =>
                        e.target.files[0] &&
                        handleFileUpload(u.id, e.target.files[0])
                      }
                    />
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
}

export default App;
